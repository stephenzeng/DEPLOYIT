@using DeployIt.Common
@using DeployIt.Models
@model DeployRequest

@{
    ViewBag.Title = "Home";

    var projectList = ViewBag.ProjectList as IEnumerable<ProjectConfig> ?? Enumerable.Empty<ProjectConfig>();
    var lastBuildList = ViewBag.LastBuildList as IEnumerable<BuildInfoModel> ?? Enumerable.Empty<BuildInfoModel>();
    var lastDeploymentList = ViewBag.LastDeploymentList as IEnumerable<DeployRequest> ?? Enumerable.Empty<DeployRequest>();
    var queuedBuildList = ViewBag.QueuedBuildList as IEnumerable<QueuedBuildInfoModel> ?? Enumerable.Empty<QueuedBuildInfoModel>();

    var currentProjectId = ViewContext.RouteData.Values["id"].ToNullable<int>();
}

<div class="row">
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <span class="fa fa-university"></span> 
                Project Deployment Details
            </div>
            <div class="panel-body" style="padding-left: 30px;padding-right: 30px;">
                @using (Html.BeginForm("deploy", "api", FormMethod.Post, new { id = "requestForm", role = "form", @class = "form-horizontal" }))
                {
                    @Html.HiddenFor(m => m.ProjectName)

                    <div class="form-group">
                        <div class="btn-group">
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                <strong>@(currentProjectId == null ? "Select a project" : Model.ProjectName)</strong> <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" role="menu">
                                @foreach (var p in projectList)
                                {
                                    if (p.Id == currentProjectId)
                                    {
                                        <li class="disabledLink">@p.Name</li>
                                    }
                                    else
                                    {
                                        <li>@Html.ActionLink(p.Name, "Index", "Home", new{@id=p.Id}, null)</li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
    
                    <div class="form-group">
                        @Html.LabelFor(m => m.BuildDropLocation, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.BuildDropLocation, new { @class = "form-control"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PublishedWebsiteFolder, new { @class = "control-label"})
                        <div>
                            @Html.TextBoxFor(m => m.PublishedWebsiteFolder, new { @class = "form-control"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.DestinationRootLocation, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.DestinationRootLocation, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.DestinationProjectFolder, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.DestinationProjectFolder, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.CurrentVersion, new { @class = "control-label" })
                        <div>
                            @Html.HiddenFor(m => m.VersionKeyName)
                            @Html.TextBoxFor(m => m.CurrentVersion, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.NextVersion, new { @class = "control-label" })
                        <div>
                            @Html.TextBoxFor(m => m.NextVersion, new { @class = "form-control"})
                        </div>
                    </div>
                    <div class="form-group">
                        <div>
                            <button id="submitButton" type="submit" class="btn btn-primary btn-lg pull-right" style="width: 100%;">
                                Deploy this build
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="panel panel-default">
            <div class="panel-heading">
                <span class="fa fa-tags"></span> 
                @Model.ProjectName Recent Deployment History
            </div>
            <div class="panel-body">
                <table class="table table-striped table-condensed margin-bottom-0" 
                    summary="This table lists the recent deployment history records for project @Model.ProjectName">
                    <thead>
                        <tr>
                            <th>Build Location</th>
                            <th>Deployment Time</th>
                            <th>Dest Folder</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var deployment in lastDeploymentList)
                        {
                            <tr>
                                <td>@deployment.BuildDropLocation</td>
                                <td>@deployment.RequestAt</td>
                                <td>@deployment.DestinationProjectFolder</td>
                                <td>@(deployment.DeploySuccess ? "Succeeded" : "Failed")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        
        <div class="panel panel-default">
            <div class="panel-heading">
                <span class="fa fa-tags"></span> 
                @Model.ProjectName TFS Recent Build History
            </div>
            <div class="panel-body">
                <table class="table table-striped table-condensed margin-bottom-0"
                    summary="This table lists the recent build history records for project @Model.ProjectName">
                    <thead>
                        <tr>
                            <th>Branch</th>
                            <th>Build Number</th>
                            <th>Finish Time</th>
                            <th>Requested By</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var build in lastBuildList)
                        {
                            <tr>
                                <td>@build.Branch</td>
                                <td>@build.BuildNumber</td>
                                <td>@build.FinishTime</td>
                                <td>@build.RequestedBy</td>
                                <td>@build.Status</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        
        <div class="panel panel-default">
            <div class="panel-heading">
                <span class="fa fa-tags"></span> 
                @Model.ProjectName TFS Build Queue
            </div>
            <div class="panel-body">
                <table class="table table-striped table-condensed margin-bottom-0"
                    summary="This table lists the current queued builds in TFS queue for project @Model.ProjectName">
                    <thead>
                        <tr>
                            <th>Build Number</th>
                            <th>Status</th>
                            <th>Requested By</th>
                            <th>Queue Time</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var build in queuedBuildList)
                        {
                            <tr>
                                <td>@build.BuildNumber</td>
                                <td>@build.Status</td>
                                <td>@build.RequestedFor</td>
                                <td>@build.QueueTime</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>

<div id="logPanel" class="console-panel">
</div>


@section scripts
{
    <script type="text/javascript">
        $(function() {
            $(function() {
                var hub = $.connection.notificationHub;
                hub.client.broadcast = function (message) {
                    if ($('#logPanel').css('display') == 'none') {
                        $('#logPanel').show('slow');
                    }

                    console.log(message);
                    $('#logPanel').append(message);
                }

                $.connection.hub.logging = true;
                $.connection.hub.start();
            });

            var button = $('#submitButton');

            if ($('#ProjectId').val() == '') {
                button.attr('disabled', 'disabled');
                $('#logPanel').hide();
            } else {
                button.removeAttr("disabled");
                $('#logPanel').hide();
            }

            $(document).on('submit', '#requestForm', function (e) {
                disableControls();
                $.ajax({
                    url: $(this).attr('action'),
                    type: $(this).attr('method'),
                    data: $(this).serialize(),
                    dataType: 'text json',
                    cache: false,
                    success: function(message) {
                        enableControls();
                    },
                    error: function (message) {
                        console.log('error');
                        enableControls();
                    }
                });

                e.preventDefault();
            });

            var disableControls = function() {
                $(button).attr('disabled', 'disabled');
                $(button).text('')
                    .append($('<li class="fa fa-refresh fa-spin"></li>'))
                    .append(' Deploying...');


                $('#ProjectId').attr('disabled', 'disabled');
            }

            var enableControls = function () {
                $(button).removeAttr("disabled");
                $(button).text("Deploy this build");
                $('#ProjectId').removeAttr("disabled");
            }
        });
    </script>
}







